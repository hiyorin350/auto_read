{"ast":null,"code":"import React,{useState}from'react';import{ChakraProvider,Button,Heading,Box,Input,FormControl,FormLabel,VStack,HStack,Progress}from\"@chakra-ui/react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[uploadedFile,setUploadedFile]=useState(null);const[file,setFile]=useState(null);const[meterData,setMeterData]=useState({maxValue:'',minValue:''});const[tempMaxValue,setTempMaxValue]=useState('');// 一時的な最大値\nconst[tempMinValue,setTempMinValue]=useState('');// 一時的な最小値\nconst[value,setValue]=useState('');// \"値\" フィールドの状態を管理する\nconst[progress,setProgress]=useState(0);// プログレスバーの進行状況を管理\nreturn/*#__PURE__*/_jsx(ChakraProvider,{children:/*#__PURE__*/_jsxs(Box,{m:5,children:[/*#__PURE__*/_jsx(Heading,{mb:4,children:\"autoread\"}),/*#__PURE__*/_jsxs(VStack,{spacing:5,align:\"stretch\",children:[/*#__PURE__*/_jsx(FileUpload,{setUploadedFile:setUploadedFile,setFile:setFile}),/*#__PURE__*/_jsx(ContentDisplay,{uploadedFile:uploadedFile,file:file,meterData:meterData,setMeterData:setMeterData,tempMaxValue:tempMaxValue,setTempMaxValue:setTempMaxValue,tempMinValue:tempMinValue,setTempMinValue:setTempMinValue,value:value// \"値\" フィールドの値を渡す\n,setValue:setValue// \"値\" フィールドを更新するための関数を渡す\n,progress:progress// プログレスバーの進行状況を渡す\n,setProgress:setProgress// プログレスバーを更新するための関数を渡す\n})]})]})});}function FileUpload(_ref){let{setUploadedFile,setFile}=_ref;const handleFileChange=e=>{const file=e.target.files[0];setFile(file);if(file){const reader=new FileReader();reader.onload=e=>{setUploadedFile(e.target.result);};reader.readAsDataURL(file);}};return/*#__PURE__*/_jsx(FormControl,{children:/*#__PURE__*/_jsx(Input,{type:\"file\",onChange:handleFileChange})});}function ContentDisplay(_ref2){let{uploadedFile,file,meterData,setMeterData,tempMaxValue,setTempMaxValue,tempMinValue,setTempMinValue,value,setValue,progress,setProgress}=_ref2;const handleAutoRead=async()=>{if(!file){alert('ファイルを選択してください。');return;}// 自動読み取りが押されたときに meterData を更新\nsetMeterData({maxValue:tempMaxValue,minValue:tempMinValue});const formData=new FormData();formData.append('file',file);formData.append('maxValue',tempMaxValue);// maxValue をフォームデータに追加\nformData.append('minValue',tempMinValue);// minValue をフォームデータに追加\ntry{// プログレスバーのリセット\nsetProgress(0);const response=await fetch('http://localhost:3000/upload',{method:'POST',body:formData,onUploadProgress:event=>{if(event.lengthComputable){const percentCompleted=Math.round(event.loaded*100/event.total);setProgress(percentCompleted);// プログレスバーを更新\n}}});if(!response.ok){throw new Error('サーバーエラー');}const result=await response.json();// JSON形式でデータを受け取る\nconst isNumeric=value=>!isNaN(value)&&!isNaN(parseFloat(value));setMeterData({maxValue:isNumeric(result.End)?result.End:'',minValue:isNumeric(result.Start)?result.Start:''});// \"値\" フィールドにサーバーから受け取った result_value を小数点以下3桁にして表示\nsetValue(parseFloat(result.result_value).toFixed(3));alert('ファイルアップロード成功');}catch(error){console.error('アップロードエラー:',error);alert('ファイルアップロード失敗。');}};return/*#__PURE__*/_jsxs(HStack,{align:\"start\",spacing:10,children:[/*#__PURE__*/_jsx(ImageDisplay,{uploadedFile:uploadedFile}),/*#__PURE__*/_jsx(MeterForm,{handleAutoRead:handleAutoRead,tempMaxValue:tempMaxValue,setTempMaxValue:setTempMaxValue,tempMinValue:tempMinValue,setTempMinValue:setTempMinValue,value:value// \"値\" フィールドの値を渡す\n,setValue:setValue// \"値\" フィールドを更新するための関数を渡す\n,progress:progress// プログレスバーの値を渡す\n})]});}function ImageDisplay(_ref3){let{uploadedFile}=_ref3;if(!uploadedFile){return null;}return/*#__PURE__*/_jsx(\"img\",{src:uploadedFile,alt:\"\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\\u3055\\u308C\\u305F\\u753B\\u50CF\",style:{width:'500px',height:'500px',objectFit:'cover'}});}function MeterForm(_ref4){let{handleAutoRead,tempMaxValue,setTempMaxValue,tempMinValue,setTempMinValue,value,setValue,progress}=_ref4;const[meterName,setMeterName]=useState('');const[unit,setUnit]=useState('');const handleDownload=()=>{const data={meterName,maxValue:tempMaxValue,minValue:tempMinValue,unit,value};const blob=new Blob([JSON.stringify(data,null,2)],{type:'application/json'});const url=URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download='meterData.json';document.body.appendChild(a);a.click();document.body.removeChild(a);};return/*#__PURE__*/_jsxs(Box,{p:5,shadow:\"md\",borderWidth:\"1px\",children:[/*#__PURE__*/_jsxs(FormControl,{mb:4,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"\\u30E1\\u30FC\\u30BF\\u30FC\\u306E\\u540D\\u524D\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:meterName,onChange:e=>setMeterName(e.target.value)})]}),/*#__PURE__*/_jsxs(FormControl,{mb:4,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"\\u6700\\u5927\\u5024\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:tempMaxValue,onChange:e=>setTempMaxValue(e.target.value)})]}),/*#__PURE__*/_jsxs(FormControl,{mb:4,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"\\u6700\\u5C0F\\u5024\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:tempMinValue,onChange:e=>setTempMinValue(e.target.value)})]}),/*#__PURE__*/_jsxs(FormControl,{mb:4,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"\\u5358\\u4F4D\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:unit,onChange:e=>setUnit(e.target.value)})]}),/*#__PURE__*/_jsxs(FormControl,{mb:4,children:[/*#__PURE__*/_jsx(FormLabel,{children:\"\\u5024\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",value:value,onChange:e=>setValue(e.target.value)})]}),/*#__PURE__*/_jsx(Progress,{value:progress,size:\"sm\",colorScheme:\"green\",mb:4}),/*#__PURE__*/_jsx(Button,{colorScheme:\"blue\",onClick:handleDownload,children:\"JSON\\u30C0\\u30A6\\u30F3\\u30ED\\u30FC\\u30C9\"}),/*#__PURE__*/_jsx(Button,{colorScheme:\"orange\",onClick:handleAutoRead,children:\"\\u81EA\\u52D5\\u8AAD\\u307F\\u53D6\\u308A\"})]});}export default App;","map":{"version":3,"names":["React","useState","ChakraProvider","Button","Heading","Box","Input","FormControl","FormLabel","VStack","HStack","Progress","jsx","_jsx","jsxs","_jsxs","App","uploadedFile","setUploadedFile","file","setFile","meterData","setMeterData","maxValue","minValue","tempMaxValue","setTempMaxValue","tempMinValue","setTempMinValue","value","setValue","progress","setProgress","children","m","mb","spacing","align","FileUpload","ContentDisplay","_ref","handleFileChange","e","target","files","reader","FileReader","onload","result","readAsDataURL","type","onChange","_ref2","handleAutoRead","alert","formData","FormData","append","response","fetch","method","body","onUploadProgress","event","lengthComputable","percentCompleted","Math","round","loaded","total","ok","Error","json","isNumeric","isNaN","parseFloat","End","Start","result_value","toFixed","error","console","ImageDisplay","MeterForm","_ref3","src","alt","style","width","height","objectFit","_ref4","meterName","setMeterName","unit","setUnit","handleDownload","data","blob","Blob","JSON","stringify","url","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","removeChild","p","shadow","borderWidth","size","colorScheme","onClick"],"sources":["/Users/hiyori/autoread_dev/src/FileUpload.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ChakraProvider, Button, Heading, Box, Input, FormControl, FormLabel, VStack, HStack, Progress } from \"@chakra-ui/react\";\n\nfunction App() {\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const [file, setFile] = useState(null);\n  const [meterData, setMeterData] = useState({ maxValue: '', minValue: '' });\n  const [tempMaxValue, setTempMaxValue] = useState(''); // 一時的な最大値\n  const [tempMinValue, setTempMinValue] = useState(''); // 一時的な最小値\n  const [value, setValue] = useState(''); // \"値\" フィールドの状態を管理する\n  const [progress, setProgress] = useState(0); // プログレスバーの進行状況を管理\n\n  return (\n    <ChakraProvider>\n      <Box m={5}>\n        <Heading mb={4}>autoread</Heading>\n        <VStack spacing={5} align=\"stretch\">\n          <FileUpload setUploadedFile={setUploadedFile} setFile={setFile} />\n          <ContentDisplay \n            uploadedFile={uploadedFile} \n            file={file} \n            meterData={meterData} \n            setMeterData={setMeterData}\n            tempMaxValue={tempMaxValue}\n            setTempMaxValue={setTempMaxValue}\n            tempMinValue={tempMinValue}\n            setTempMinValue={setTempMinValue}\n            value={value} // \"値\" フィールドの値を渡す\n            setValue={setValue} // \"値\" フィールドを更新するための関数を渡す\n            progress={progress} // プログレスバーの進行状況を渡す\n            setProgress={setProgress} // プログレスバーを更新するための関数を渡す\n          />\n        </VStack>\n      </Box>\n    </ChakraProvider>\n  );\n}\n\nfunction FileUpload({ setUploadedFile, setFile }) {\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    setFile(file);\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setUploadedFile(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <FormControl>\n      <Input type=\"file\" onChange={handleFileChange} />\n    </FormControl>\n  );\n}\n\nfunction ContentDisplay({ uploadedFile, file, meterData, setMeterData, tempMaxValue, setTempMaxValue, tempMinValue, setTempMinValue, value, setValue, progress, setProgress }) {\n  const handleAutoRead = async () => {\n    if (!file) {\n      alert('ファイルを選択してください。');\n      return;\n    }\n\n    // 自動読み取りが押されたときに meterData を更新\n    setMeterData({ maxValue: tempMaxValue, minValue: tempMinValue });\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('maxValue', tempMaxValue); // maxValue をフォームデータに追加\n    formData.append('minValue', tempMinValue); // minValue をフォームデータに追加\n\n    try {\n      // プログレスバーのリセット\n      setProgress(0);\n\n      const response = await fetch('http://localhost:3000/upload', {\n        method: 'POST',\n        body: formData,\n        onUploadProgress: (event) => {\n          if (event.lengthComputable) {\n            const percentCompleted = Math.round((event.loaded * 100) / event.total);\n            setProgress(percentCompleted); // プログレスバーを更新\n          }\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('サーバーエラー');\n      }\n\n      const result = await response.json(); // JSON形式でデータを受け取る\n\n      const isNumeric = (value) => !isNaN(value) && !isNaN(parseFloat(value));\n      setMeterData({\n        maxValue: isNumeric(result.End) ? result.End : '',\n        minValue: isNumeric(result.Start) ? result.Start : ''\n      });\n\n      // \"値\" フィールドにサーバーから受け取った result_value を小数点以下3桁にして表示\n      setValue(parseFloat(result.result_value).toFixed(3));\n\n      alert('ファイルアップロード成功');\n    } catch (error) {\n      console.error('アップロードエラー:', error);\n      alert('ファイルアップロード失敗。');\n    }\n  };\n\n  return (\n    <HStack align=\"start\" spacing={10}>\n      <ImageDisplay uploadedFile={uploadedFile} />\n      <MeterForm \n        handleAutoRead={handleAutoRead} \n        tempMaxValue={tempMaxValue} \n        setTempMaxValue={setTempMaxValue} \n        tempMinValue={tempMinValue} \n        setTempMinValue={setTempMinValue} \n        value={value} // \"値\" フィールドの値を渡す\n        setValue={setValue} // \"値\" フィールドを更新するための関数を渡す\n        progress={progress} // プログレスバーの値を渡す\n      />\n    </HStack>\n  );\n}\n\nfunction ImageDisplay({ uploadedFile }) {\n  if (!uploadedFile) {\n    return null;\n  }\n  return (\n    <img src={uploadedFile} alt=\"アップロードされた画像\" style={{ width: '500px', height: '500px', objectFit: 'cover' }} />\n  );\n}\n\nfunction MeterForm({ handleAutoRead, tempMaxValue, setTempMaxValue, tempMinValue, setTempMinValue, value, setValue, progress }) {\n  const [meterName, setMeterName] = useState('');\n  const [unit, setUnit] = useState('');\n\n  const handleDownload = () => {\n    const data = {\n      meterName,\n      maxValue: tempMaxValue,\n      minValue: tempMinValue,\n      unit,\n      value,\n    };\n    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'meterData.json';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n\n  return (\n    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\n      <FormControl mb={4}>\n        <FormLabel>メーターの名前</FormLabel>\n        <Input type=\"text\" value={meterName} onChange={(e) => setMeterName(e.target.value)} />\n      </FormControl>\n      <FormControl mb={4}>\n        <FormLabel>最大値</FormLabel>\n        <Input\n          type=\"text\"\n          value={tempMaxValue}\n          onChange={(e) => setTempMaxValue(e.target.value)}\n        />\n      </FormControl>\n      <FormControl mb={4}>\n        <FormLabel>最小値</FormLabel>\n        <Input\n          type=\"text\"\n          value={tempMinValue}\n          onChange={(e) => setTempMinValue(e.target.value)}\n        />\n      </FormControl>\n      <FormControl mb={4}>\n        <FormLabel>単位</FormLabel>\n        <Input type=\"text\" value={unit} onChange={(e) => setUnit(e.target.value)} />\n      </FormControl>\n      <FormControl mb={4}>\n        <FormLabel>値</FormLabel>\n        <Input type=\"text\" value={value} onChange={(e) => setValue(e.target.value)} />\n      </FormControl>\n      <Progress value={progress} size=\"sm\" colorScheme=\"green\" mb={4} />\n      <Button colorScheme=\"blue\" onClick={handleDownload}>\n        JSONダウンロード\n      </Button>\n      <Button colorScheme=\"orange\" onClick={handleAutoRead}>\n        自動読み取り\n      </Button>\n    </Box>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}